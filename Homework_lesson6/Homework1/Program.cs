/*Знакомство с языками программирования (семинары)
Урок 6. Одномерные массивы. Продолжение
Задача 41: Пользователь вводит с клавиатуры M чисел.
Посчитайте, сколько чисел больше 0 ввёл пользователь.

0, 7, 8, -2, -2 -> 2

1, -7, 567, 89, 223-> 3  */

Console.WriteLine("Введите количество чисел: "); // вывод в консоль предложения ввести количество числе
bool isParsed = int.TryParse(Console.ReadLine(), out int size); // ввод в консоль переменной с проверкой что это не буквы

if (!isParsed) // проверка что введены числа
{
    Console.WriteLine("Введено не число"); // если введены буквы вывод в консоль
    return; // прекращение работы программы
}

if (size == 0) // если в качестве размера массива введен 0
{
    Console.WriteLine("Размер массива должен быть больше 0"); // если введены буквы вывод в консоль
    return; // прекращение работы программы
}


int[] array = GenerateArrayNumbers(size); // создание массива типа int и запись в него результат метода

PrintArray(array);

int tmp = FindQuantitiNumbers(array); // создаем переменную типа int и записываем в нее рузультат выполнения метода (делаем так для того, чтобы в зависимости от количества числе выставлять правильно окончание слова при выводе в консоль)

if (tmp == 0 && tmp >= 10)
{
    Console.WriteLine($"Пользователь ввел {tmp} чисел больше нуля"); // вывод в консоль результат выполнения метода
}
else if (tmp >= 2 & tmp <= 4)
{
    Console.WriteLine($"Пользователь ввел {tmp} числа больше нуля"); // вывод в консоль результат выполнения метода
}
else if (tmp == 1)
{
    Console.WriteLine($"Пользователь ввел {tmp} число больше нуля"); // вывод в консоль результат выполнения метода
}

// Метод создания массива типа int и запись в него числе вводимых из консоли с проверкой что вводятся числа а не буквы
int[] GenerateArrayNumbers(int size)
{
    int[] array = new int[size]; // создание массива типа int с размером переданным в метод

    for (int i = 0; i < size; ) // цикл от i до размера массива, при это i++ в данной части не указывается так как ниже идет обработка когда именно увеличиваем итератор
    {
        Console.WriteLine($"Введите число {i+1}"); // вывод в консоль просьбы ввести число (для каждого элемента массива, так как работа происходит в цикле)
        bool isParsed1 = int.TryParse(Console.ReadLine(), out int number); // ввод в консоль числа с проверкой что введены числа а не буквы
        
        if (!isParsed1) // проверка что введены числа
        {
            Console.WriteLine("Введите число"); // если введены буквы вывод в консоль
            continue; // повторяем цикл, а повторяем так как мы не увеличили итератор (он увеличивается только при введении числа)
        }
        else // если ведено число
        {
            array[i] = number; // записываем число в массив
            i++; // увеличиваем итератор
        }
    }

    return array; // возвращаем массив как результат выполнения метода
}


//Метод поиска в масиве количества чисел больше нуля
int FindQuantitiNumbers(int[] array)
{
    int tmp = 0; // создаем переменную типа int

    for (int i = 0; i < array.Length; i++) // цикл от i до array.Length (длина массива)
    {
        if (array[i] > 0) // если значение выбранного элемента массива больше 0
        {
            tmp++; // если да то увеличиваем переменную
        }
    }

    return tmp; // возвращаем переменную как результат выполнения метода
}

// метод вывода массива в консоль
void PrintArray(int[] array)
{
    Console.WriteLine($"Массив: [{string.Join(", ", array)}]");
}